# See https://pre-commit.com/ for usage and config

## This is used to configure commit hooks on your
## local git repository. If pre-commit is properly
## configured and installed, each of the checks below
## should run on your repository every time you
## perform a commit:
##
##    > git commit -m 'did a thing'
##    isort.....................................Passed
##    black.....................................Passed
##    Flake8....................................Passed
##
## Any check that fails will prevent you from committing.

repos:
  ## isort and black are formatters, and they fail when
  ## they change a file, so that you know they've done so
  ## and have a chance to do something about it if you wish
  ## before you commit. In most cases, you should be able
  ## to just try again in order to succeed.
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        stages: [push]
        args: ["--check-only", "--diff", "--profile", "black"]
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
        language_version: python3.10
        stages: [push]
        args: ["--check", "--diff", "--color"]
  ## Flake8 and mypy are static analyzers, and they will fail
  ## if they find bugs or bad practice in your code. In such
  ## a case, you will have to fix those things in order to
  ## pass your commit.
  ##
  ## As such, we recommend that you COMMIT EARLY AND OFTEN!
  ## Completeness doesn't matter! All you're doing is
  ## checkpointing your work, and the less distance between
  ## the last commit and the current one, the easier it will
  ## be to fix any bugs that the static analyzers find.
  - repo: https://github.com/pycqa/flake8
    rev: 4.0.1
    hooks:
      - id: flake8
        stages: [push]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.942
    hooks:
      - id: mypy
        stages: [push]
  ## Pytest will run any tests you have written. It looks for
  ## any file whose name ends with '_tests.py', and runs any
  ## functions in that file whose names begin with 'test_'.
  ## pytest will not fail if you have no tests, but we strongly
  ## recommend writing tests against your code, as this will
  ## enable you to consistently and automatically verify that
  ## your code is doing what you think it is.
  - repo: local
    hooks:
      - id: pytest
        name: run unit tests
        entry: pytest --suppress-no-test-exit-code
        language: system
        types: [python]
        stages: [push]
        pass_filenames: false
